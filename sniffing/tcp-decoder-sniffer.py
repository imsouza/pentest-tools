class PacketDecoder(object):
  STX = ...
  ETX = ...

  def __init__(self):
    self._stream = ''

  def feed(self, buffer):
    self._stream += buffer

  def decode(self):
    while len(self._stream) > 2:
      end = self._stream.find(self.ETX)
      if end == -1:
        break

      packet_len = ord(self._stream[1])
      packet = self._stream[:end]
      if packet_len >= 5 and check_sum_valid(packet):
        yield packet
      self._stream = self._stream[end+1]


decoder = PacketDecoder()

while True:
  data = sock.recv(256)
  decoder.feed(data)
  for packet in decoder.decode():
    process(packet)

