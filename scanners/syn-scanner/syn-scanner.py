import sys

from scapy.all import *
from datetime import datetime
from time import strftime
from logging import getLogger, ERROR

getLogger("scapy.runtime").setLevel(ERROR)

try:
  target = raw_input('[*] Enter Target IP Address: ')
  minp = raw_input('[*] Enter Minimum Port Number: ')
  maxp = raw_input('[*] Enter Maximum Port Number: ')

  try:
    if int(minp) >= 0 and int(maxp) >= 0 and int(maxp) >= int(minp):
      pass

    else:
      print '\n[!] Invalid Range of Ports'
      print '[!] Exiting...'
      sys.exit(1)

  except Exception:
    print '\n[!] Invalid Range of Ports'
    print '[!] Exiting...'
    sys.exit(1)

except KeyboardInterrupt:
  print '\n[*] User Requested Shutdown...'
  print '[*] Exiting...'
  sys.exit(1)


ports = range(int(minp), int(maxp)+1)
start_clock - datetime.now()

SYNACK = 0x12
RSTACK = 0x14


def checkhost(ip):
  conf.verb = 0
  try:
    ping = sr1(IP,(dst = ip)/ICMP())
    print '\n[*] Target is Up, Beginning Scan...'

  except Exception:
    print "\n[!] Couldn't Resolve Target"
    print '[!] Exiting...'
    sys.exit(1)


def scanport(port):
  srcport = RandShort()
  conf.verb = 0
  SYNACKpkt = sr1(IP(dst=target)/TCP(sport=srcport, dport=port, flags='S'))
  pktflags = SYNACKpkt.getlayer(TCP).flags

  if pktflags == SYNACK:
    return True
  else:
    return False

  RSTpkt = IP(dst=target)/TCP(sport=srcport, dport=port, flags='R')
  send(RSTpkt)


checkhost(target)
print '[*] Scanning Started at ' + strftime("%H:%M:%S")  + '!\n'

for port in ports:
  status = scanport(port)
  if status == True:
    print 'Port ' + str(port) + ': Open' 


stop_clock = datetime.now()
total_time = stop_clock - start_clock

print '\n[*] Scanning Finished!'
print '[*] Total Scan Duration: ' + str(total_time)

